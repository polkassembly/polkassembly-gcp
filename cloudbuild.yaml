# cloudbuild.yaml
# This version has explicit IDs for each step for clearer logging.

steps:
  # Step 0: DEBUG - Check if the secret is being loaded.
- id: 'Debug Secret'
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      echo "--- DEBUG STEP ---"
      if [ -z "$_FIREBASE_CONFIG" ]; then
        echo "ERROR: _FIREBASE_CONFIG is empty or not set. Check secret name and IAM permissions."
        exit 1
      else
        echo "_FIREBASE_CONFIG is set. First 30 characters: $(echo $_FIREBASE_CONFIG | head -c 30)"
        echo "--- END DEBUG ---"
      fi
  secretEnv: ['_FIREBASE_CONFIG']

  # Step 1: Build the Docker image.
- id: 'Build Docker Image'
  name: 'gcr.io/cloud-builders/docker'
  args:
    - 'build'
    - '--tag=gcr.io/$PROJECT_ID/my-app:$COMMIT_SHA'
    - '--build-arg'
    - 'FIREBASE_SERVICE_ACC_CONFIG=${_FIREBASE_CONFIG}'
    - '.'
  secretEnv: ['_FIREBASE_CONFIG']

  # Step 2: Push the built image to Google Container Registry (GCR).
- id: 'Push to GCR'
  name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/my-app:$COMMIT_SHA']

# Make the image name available to subsequent build steps (e.g., deployments).
images:
  - 'gcr.io/$PROJECT_ID/my-app:$COMMIT_SHA'

# Specify the logging option.
options:
  logging: CLOUD_LOGGING_ONLY

# Define the secret to be used by this build.
availableSecrets:
  secretManager:
    - versionName: 'projects/$PROJECT_ID/secrets/firebase-service-account/versions/latest'
      env: '_FIREBASE_CONFIG'
